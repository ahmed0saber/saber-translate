class SaberTranslate{constructor(e,t){if(this.isValid=!0,!SaberTranslate.isObject(e)){console.error(`The first parameter must be an object, ${JSON.stringify(e)} is not accepted. (new SaberTranslate())`),this.isValid=!1;return}if(!SaberTranslate.isArray(t)){console.error(`The second parameter must be an array, ${JSON.stringify(t)} is not accepted. (new SaberTranslate())`),this.isValid=!1;return}if(0===t.length){console.error(`The second parameter can't be an empty array, ${JSON.stringify(t)} is not accepted. (new SaberTranslate())`),this.isValid=!1;return}for(let r=0;r<t.length;r++)if(!SaberTranslate.isString(t[r])){console.error(`The second parameter must be an array that only contains elements as string data, ${JSON.stringify(t[r])} is not accepted. (new SaberTranslate())`),this.isValid=!1;return}this.translations=e,this.languages=t,this.currentLanguage=null,this.setLanguage(t[0])}static isArray(e){return"[object Array]"===Object.prototype.toString.call(e)}static isObject(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}static isString(e){return"string"==typeof e}setLanguage(e){if(!this.isValid){console.error('Make sure you are using "new SaberTranslate()" in a valid way. (setLanguage())');return}if(!SaberTranslate.isString(e)){console.error(`The first parameter must be a string, ${JSON.stringify(e)} is not accepted. (setLanguage())`);return}if(!this.languages.includes(e)){console.error(`The desired language doesn't exist in the languages given, ${JSON.stringify(e)} is not accepted. (setLanguage())`);return}this.currentLanguage=e;let t=document.querySelectorAll("[data-translate]");t.forEach(e=>e.textContent=this.getTranslation(e.dataset.translate));let r=document.getElementsByTagName("html")[0];this.languages.forEach(e=>r.classList.remove(e)),r.classList.add(e),r.setAttribute("lang",e)}getTranslation(e){if(!this.isValid){console.error('Make sure you are using "new SaberTranslate()" in a valid way. (getTranslation())');return}if(!SaberTranslate.isString(e)){console.error(`The first parameter must be a string, ${JSON.stringify(e)} is not accepted. (getTranslation())`);return}let t=e.trim();if(""===t)return console.warn(`The desired translation ${JSON.stringify(e)} can't be empty or just spaces. (getTranslation())`),e;let r=t.split("."),a=this.translations;for(let n=0;n<r.length;n++){if(!a[r[n]])return console.warn(`The desired translation ${JSON.stringify(e)} is not found. (getTranslation())`),e;a=a[r[n]]}return a[this.currentLanguage]?a[this.currentLanguage]:(console.warn(`The desired translation ${JSON.stringify(e)} is found but doesn't exist for the desired language ${JSON.stringify(this.currentLanguage)}. (getTranslation())`),e)}}